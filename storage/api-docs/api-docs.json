{
    "openapi": "3.0.0",
    "info": {
        "title": "Api de atzicay",
        "description": "Documentaci√≥n de la API de atzicay",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/v1/atzicay",
            "description": "Servidor de desarrollo"
        }
    ],
    "paths": {
        "/auth/generate-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Generates JWT token from Auth0 ID token",
                "description": "Validates an Auth0 ID token and returns a JWT token for internal use.",
                "operationId": "e3bc3dcc34f7487b686f0e75b04f4b87",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id_token"
                                ],
                                "properties": {
                                    "id_token": {
                                        "type": "string",
                                        "example": "eyJz93a...k4laUWw"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "jwt_token_example"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        },
                                        "user": {
                                            "properties": {
                                                "Id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "Email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "Name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "LastName": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "Gender": {
                                                    "type": "string",
                                                    "example": "other"
                                                },
                                                "CountryId": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "City": {
                                                    "type": "string",
                                                    "example": "N/A"
                                                },
                                                "Birthdate": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2000-01-01"
                                                },
                                                "CreatedAt": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-21T12:34:56"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid token or missing email"
                    },
                    "500": {
                        "description": "Internal error verifying token"
                    }
                }
            }
        },
        "/auth/refresh-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refreshes JWT token",
                "description": "Generates a new JWT token using the refresh token mechanism.",
                "operationId": "f63bd8623627d4788e5207877d1c582d",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "new_jwt_token_example"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Failed to refresh token"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/country/all": {
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get all countries",
                "description": "Returns a list of all countries sorted by name.",
                "operationId": "getAllCountries",
                "responses": {
                    "200": {
                        "description": "Countries retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "Id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "Name": {
                                                        "type": "string",
                                                        "example": "Peru"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Countries retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving countries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving countries: Some error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/game/filter": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get filtered list of games",
                "description": "Returns a list of games filtered by search term, game type, with pagination.",
                "operationId": "gameAllFilter",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for game name or author",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Puzzle Game"
                        }
                    },
                    {
                        "name": "gameType",
                        "in": "query",
                        "description": "Type of game to filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "hangman",
                                "memory",
                                "puzzle",
                                "solve_the_word",
                                "all"
                            ],
                            "example": "puzzle"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 6
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Games retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Memory Challenge"
                                                            },
                                                            "difficulty": {
                                                                "type": "string",
                                                                "example": "easy"
                                                            },
                                                            "author": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "type_game": {
                                                                "type": "string",
                                                                "example": "memory"
                                                            },
                                                            "rating": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 4.5
                                                            },
                                                            "game_instance_id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "author_id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Games retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving games."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/game/amount-by-type/{userId}": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get the amount of games by type for a specific user",
                "description": "Returns the count of each game type created by the specified user (professor).",
                "operationId": "amountByGameType",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user (professor)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Amount of games by type retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "hangman_count": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "memorygame_count": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "puzzle_count": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "solvetheword_count": {
                                                    "type": "integer",
                                                    "example": 4
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Amount of games by type retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving game amounts"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/my-games/{userId}": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get all games created by a specific user (professor)",
                "description": "Returns a paginated list of all games created by the specified user (professor), optionally filtered by game type.",
                "operationId": "myGames",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user (professor)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    },
                    {
                        "name": "gameType",
                        "in": "query",
                        "description": "Type of game to filter",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "hangman",
                                "memory",
                                "puzzle",
                                "solve_the_word",
                                "all"
                            ],
                            "example": "puzzle"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 6
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of results to skip (for pagination)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "My games retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Puzzle Master"
                                                            },
                                                            "difficulty": {
                                                                "type": "string",
                                                                "example": "medium"
                                                            },
                                                            "visibility": {
                                                                "type": "string",
                                                                "example": "public"
                                                            },
                                                            "author": {
                                                                "type": "string",
                                                                "example": "Jane Smith"
                                                            },
                                                            "type_game": {
                                                                "type": "string",
                                                                "example": "puzzle"
                                                            },
                                                            "rating": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 4.7
                                                            },
                                                            "game_instance_id": {
                                                                "type": "integer",
                                                                "example": 7
                                                            },
                                                            "author_id": {
                                                                "type": "integer",
                                                                "example": 3
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "My games retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving user's games"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/my-game/update-status/{gameInstanceId}": {
            "put": {
                "tags": [
                    "Games"
                ],
                "summary": "Update the visibility status of a game instance",
                "description": "Updates the visibility (status) of a specific game instance.",
                "operationId": "updateStatusGameInstance",
                "parameters": [
                    {
                        "name": "gameInstanceId",
                        "in": "path",
                        "description": "ID of the game instance to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "New status (visibility) of the game instance",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Game instance status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Game instance status updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Game instance not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Game instance not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "status": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The status field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update game instance status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update game instance status"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/my-game/update/{gameInstanceId}": {
            "put": {
                "tags": [
                    "Games"
                ],
                "summary": "Update a game instance based on its type",
                "description": "Updates a game instance for the specified type: hangman, memory, puzzle, or solve_the_word.",
                "operationId": "updateGameInstance",
                "parameters": [
                    {
                        "name": "gameInstanceId",
                        "in": "path",
                        "description": "ID of the game instance to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "gameType",
                                    "data"
                                ],
                                "properties": {
                                    "gameType": {
                                        "type": "string",
                                        "enum": [
                                            "hangman",
                                            "memory",
                                            "puzzle",
                                            "solve_the_word"
                                        ],
                                        "example": "puzzle"
                                    },
                                    "data": {
                                        "type": "object",
                                        "oneOf": [
                                            {
                                                "properties": {
                                                    "Word": {
                                                        "type": "string",
                                                        "example": "APPLE"
                                                    },
                                                    "Clue": {
                                                        "type": "string",
                                                        "example": "A fruit"
                                                    },
                                                    "Presentation": {
                                                        "type": "string",
                                                        "example": "standard"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "properties": {
                                                    "Mode": {
                                                        "type": "string",
                                                        "enum": [
                                                            "II",
                                                            "ID"
                                                        ],
                                                        "example": "II"
                                                    },
                                                    "PathImage1": {
                                                        "type": "string",
                                                        "format": "binary"
                                                    },
                                                    "PathImage2": {
                                                        "type": "string",
                                                        "format": "binary"
                                                    },
                                                    "Description": {
                                                        "type": "string",
                                                        "example": "Match the animals"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "properties": {
                                                    "PathImg": {
                                                        "type": "string",
                                                        "format": "binary"
                                                    },
                                                    "Clue": {
                                                        "type": "string",
                                                        "example": "Solve the landscape puzzle"
                                                    },
                                                    "Rows": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "Cols": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "AutomaticHelp": {
                                                        "type": "boolean",
                                                        "example": true
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "properties": {
                                                    "Rows": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "Cols": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "Words": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "Id": {
                                                                    "type": "integer",
                                                                    "example": 1
                                                                },
                                                                "Word": {
                                                                    "type": "string",
                                                                    "example": "CAT"
                                                                },
                                                                "Orientation": {
                                                                    "type": "string",
                                                                    "example": "HR"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Game instance updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Puzzle game updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Game instance not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Game instance not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "gameType": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The gameType field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error updating game instance: Some error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/my-game/create/{userId}": {
            "post": {
                "tags": [
                    "Games"
                ],
                "summary": "Create a new game instance by type",
                "description": "Creates a game instance for the specified type: hangman, memory, puzzle, or solve_the_word, with mandatory settings.",
                "operationId": "createGame",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the professor (user) who creates the game",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "gameType",
                                    "data"
                                ],
                                "properties": {
                                    "gameType": {
                                        "type": "string",
                                        "enum": [
                                            "hangman",
                                            "memory",
                                            "puzzle",
                                            "solve_the_word"
                                        ],
                                        "example": "hangman"
                                    },
                                    "data": {
                                        "type": "object",
                                        "oneOf": [
                                            {
                                                "required": [
                                                    "Words",
                                                    "Settings"
                                                ],
                                                "properties": {
                                                    "Name": {
                                                        "type": "string",
                                                        "example": "My Hangman Game"
                                                    },
                                                    "Description": {
                                                        "type": "string",
                                                        "example": "Hangman for kids"
                                                    },
                                                    "Words": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "Word": {
                                                                    "type": "string",
                                                                    "example": "APPLE"
                                                                },
                                                                "Clue": {
                                                                    "type": "string",
                                                                    "example": "A fruit"
                                                                },
                                                                "Presentation": {
                                                                    "type": "string",
                                                                    "example": "standard"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "Difficulty": {
                                                        "type": "string",
                                                        "example": "Easy"
                                                    },
                                                    "Activated": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "Visibility": {
                                                        "type": "string",
                                                        "example": "Public"
                                                    },
                                                    "Settings": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "Key": {
                                                                    "type": "string",
                                                                    "example": "time_limit"
                                                                },
                                                                "Value": {
                                                                    "type": "string",
                                                                    "example": "60"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "required": [
                                                    "Mode",
                                                    "Settings"
                                                ],
                                                "properties": {
                                                    "Name": {
                                                        "type": "string",
                                                        "example": "Memory Game"
                                                    },
                                                    "Description": {
                                                        "type": "string",
                                                        "example": "Find the pairs"
                                                    },
                                                    "Mode": {
                                                        "type": "string",
                                                        "enum": [
                                                            "II",
                                                            "ID"
                                                        ],
                                                        "example": "II"
                                                    },
                                                    "PathImage1": {
                                                        "type": "string",
                                                        "format": "binary"
                                                    },
                                                    "PathImage2": {
                                                        "type": "string",
                                                        "format": "binary"
                                                    },
                                                    "Difficulty": {
                                                        "type": "string",
                                                        "example": "Medium"
                                                    },
                                                    "Activated": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "Visibility": {
                                                        "type": "string",
                                                        "example": "Private"
                                                    },
                                                    "Settings": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "Key": {
                                                                    "type": "string",
                                                                    "example": "max_pairs"
                                                                },
                                                                "Value": {
                                                                    "type": "string",
                                                                    "example": "8"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "required": [
                                                    "PathImg",
                                                    "Rows",
                                                    "Cols",
                                                    "Settings"
                                                ],
                                                "properties": {
                                                    "Name": {
                                                        "type": "string",
                                                        "example": "Puzzle Challenge"
                                                    },
                                                    "Description": {
                                                        "type": "string",
                                                        "example": "Assemble the puzzle"
                                                    },
                                                    "PathImg": {
                                                        "type": "string",
                                                        "format": "binary"
                                                    },
                                                    "Clue": {
                                                        "type": "string",
                                                        "example": "Solve the mystery image"
                                                    },
                                                    "Rows": {
                                                        "type": "integer",
                                                        "example": 4
                                                    },
                                                    "Cols": {
                                                        "type": "integer",
                                                        "example": 4
                                                    },
                                                    "AutomaticHelp": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "Difficulty": {
                                                        "type": "string",
                                                        "example": "Hard"
                                                    },
                                                    "Activated": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "Visibility": {
                                                        "type": "string",
                                                        "example": "Public"
                                                    },
                                                    "Settings": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "Key": {
                                                                    "type": "string",
                                                                    "example": "time_limit"
                                                                },
                                                                "Value": {
                                                                    "type": "string",
                                                                    "example": "120"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            {
                                                "required": [
                                                    "Rows",
                                                    "Cols",
                                                    "Words",
                                                    "Settings"
                                                ],
                                                "properties": {
                                                    "Name": {
                                                        "type": "string",
                                                        "example": "Word Puzzle"
                                                    },
                                                    "Description": {
                                                        "type": "string",
                                                        "example": "Find hidden words"
                                                    },
                                                    "Rows": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "Cols": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "Words": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "Word": {
                                                                    "type": "string",
                                                                    "example": "CAT"
                                                                },
                                                                "Orientation": {
                                                                    "type": "string",
                                                                    "example": "HR"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "Difficulty": {
                                                        "type": "string",
                                                        "example": "Medium"
                                                    },
                                                    "Activated": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "Visibility": {
                                                        "type": "string",
                                                        "example": "Public"
                                                    },
                                                    "Settings": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "Key": {
                                                                    "type": "string",
                                                                    "example": "max_words"
                                                                },
                                                                "Value": {
                                                                    "type": "string",
                                                                    "example": "15"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Game created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Hangman game created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "gameType": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The gameType field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error creating game",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error creating game: Unexpected error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/game/report/{gameInstanceId}": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get game session report by game instance",
                "description": "Generates a report of game sessions for a specific game instance, including total sessions, total minutes played, and average minutes per session per user and month.",
                "operationId": "reportGame",
                "parameters": [
                    {
                        "name": "gameInstanceId",
                        "in": "path",
                        "description": "ID of the game instance (ProgrammingGameId) for which the report is generated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 12
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game session report generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Game session report generated successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "user": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "month_name": {
                                                        "type": "string",
                                                        "example": "March"
                                                    },
                                                    "year": {
                                                        "type": "integer",
                                                        "example": 2024
                                                    },
                                                    "total_sessions": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "total_minutes_played": {
                                                        "type": "integer",
                                                        "example": 150
                                                    },
                                                    "avg_minutes_per_session": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 30
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error generating report",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error generating report: Some error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/game/settings/{gameInstanceId}": {
            "get": {
                "tags": [
                    "Games"
                ],
                "summary": "Get the complete game configuration for a game instance",
                "description": "Retrieves the full configuration for a game instance. The response includes base game details and, only if available, specific configurations for Hangman, Memory, Puzzle, SolveTheWord, and general game settings.",
                "operationId": "getSettingsGame",
                "parameters": [
                    {
                        "name": "gameInstanceId",
                        "in": "path",
                        "description": "ID of the game instance to retrieve settings for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game settings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Game settings retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "game_instance_id": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "game_name": {
                                                    "type": "string",
                                                    "example": "Puzzle Challenge"
                                                },
                                                "game_description": {
                                                    "type": "string",
                                                    "example": "Exciting puzzle game"
                                                },
                                                "difficulty": {
                                                    "type": "string",
                                                    "example": "Medium"
                                                },
                                                "visibility": {
                                                    "type": "string",
                                                    "example": "Public"
                                                },
                                                "activated": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "hangman_words": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "word": {
                                                                "type": "string",
                                                                "example": "APPLE"
                                                            },
                                                            "clue": {
                                                                "type": "string",
                                                                "example": "A fruit"
                                                            },
                                                            "presentation": {
                                                                "type": "string",
                                                                "example": "standard"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "nullable": true
                                                },
                                                "memory_pairs": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "mode": {
                                                                "type": "string",
                                                                "example": "II"
                                                            },
                                                            "path_image1": {
                                                                "type": "string",
                                                                "example": "storage/memory/image1.png"
                                                            },
                                                            "path_image2": {
                                                                "type": "string",
                                                                "example": "storage/memory/image2.png"
                                                            },
                                                            "description_image": {
                                                                "type": "string",
                                                                "example": "A pair of animals"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "nullable": true
                                                },
                                                "puzzle": {
                                                    "properties": {
                                                        "path_img": {
                                                            "type": "string",
                                                            "example": "storage/puzzle/image.png"
                                                        },
                                                        "clue": {
                                                            "type": "string",
                                                            "example": "Assemble the picture"
                                                        },
                                                        "rows": {
                                                            "type": "integer",
                                                            "example": 4
                                                        },
                                                        "cols": {
                                                            "type": "integer",
                                                            "example": 4
                                                        },
                                                        "automatic_help": {
                                                            "type": "boolean",
                                                            "example": true
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "solve_the_word": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "word": {
                                                                "type": "string",
                                                                "example": "DOG"
                                                            },
                                                            "orientation": {
                                                                "type": "string",
                                                                "example": "HR"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "nullable": true
                                                },
                                                "settings": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "key": {
                                                                "type": "string",
                                                                "example": "time_limit"
                                                            },
                                                            "value": {
                                                                "type": "string",
                                                                "example": "60"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Game instance not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Game instance not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving game settings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving game settings: Unexpected error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/my-programming-games/{userId}": {
            "get": {
                "tags": [
                    "Programming Games"
                ],
                "summary": "Get programming games by user with filters",
                "description": "Retrieve a list of programming games associated with a specific user, allowing filtering by game type, start and end date (exact or range). Pagination (limit & offset) is also supported.",
                "operationId": "myProgrammingGames",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    },
                    {
                        "name": "gameType",
                        "in": "query",
                        "description": "Type of the game (hangman, memory, puzzle, solve_the_word, or all)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "puzzle"
                        }
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "Start date for the range filter (format: Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-06-01"
                        }
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "End date for the range filter (format: Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-06-30"
                        }
                    },
                    {
                        "name": "exactStartDate",
                        "in": "query",
                        "description": "Exact start date filter (format: Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-06-15"
                        }
                    },
                    {
                        "name": "exactEndDate",
                        "in": "query",
                        "description": "Exact end date filter (format: Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-06-20"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Number of records to skip",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Programming games retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "My programming games retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "game_instance_id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "programming_name": {
                                                                "type": "string",
                                                                "example": "Intro to Loops"
                                                            },
                                                            "type_game": {
                                                                "type": "string",
                                                                "example": "puzzle"
                                                            },
                                                            "name_game": {
                                                                "type": "string",
                                                                "example": "Loop Puzzle"
                                                            },
                                                            "start_time": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-06-10 09:00:00"
                                                            },
                                                            "end_time": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2024-06-10 10:00:00"
                                                            },
                                                            "attempts": {
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "maximum_time": {
                                                                "type": "integer",
                                                                "example": 600
                                                            },
                                                            "status": {
                                                                "type": "boolean",
                                                                "example": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving programming games",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving programming games: Unexpected error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/programming-game/status/{gameInstanceId}": {
            "put": {
                "tags": [
                    "Programming Games"
                ],
                "summary": "Update the activation status of a Programming Game",
                "description": "Updates the 'Activated' status of a Programming Game associated with a given GameInstanceId.",
                "operationId": "setProgrammingGameStatus",
                "parameters": [
                    {
                        "name": "gameInstanceId",
                        "in": "path",
                        "description": "ID of the game instance",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 12
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "description": "New status for the game: 0 = inactive, 1 = active",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Programming game status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Programming game status updated successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Programming game not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Programming game not found for this game instance"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid status value"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/programming-game/create/{gameInstanceId}/{userId}": {
            "post": {
                "tags": [
                    "Programming Games"
                ],
                "summary": "Create a new Programming Game",
                "description": "Creates a new Programming Game for the given GameInstance and User.",
                "operationId": "createProgrammingGame",
                "parameters": [
                    {
                        "name": "gameInstanceId",
                        "in": "path",
                        "description": "ID of the Game Instance",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the User (Programmer)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "Name",
                                    "Activated",
                                    "StartTime",
                                    "EndTime",
                                    "Attempts",
                                    "MaximumTime"
                                ],
                                "properties": {
                                    "Name": {
                                        "type": "string",
                                        "example": "Algorithm Challenge"
                                    },
                                    "Activated": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "StartTime": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-06-30 10:00:00"
                                    },
                                    "EndTime": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-06-30 12:00:00"
                                    },
                                    "Attempts": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "MaximumTime": {
                                        "type": "integer",
                                        "example": 120
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Programming game created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Programming game created successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Programming game created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed."
                                        },
                                        "data": {
                                            "properties": {
                                                "Name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The Name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while creating the programming game."
                                        },
                                        "data": {
                                            "properties": {
                                                "exception": {
                                                    "type": "string",
                                                    "example": "Detailed exception message here."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rate-game/{gameInstanceId}/{userId}": {
            "post": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Rate a game instance",
                "description": "Creates or updates a user's rating for a specific game instance.",
                "operationId": "valueRating",
                "parameters": [
                    {
                        "name": "gameInstanceId",
                        "in": "path",
                        "description": "ID of the game instance",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 12
                        }
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user rating the game",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "value"
                                ],
                                "properties": {
                                    "value": {
                                        "description": "Rating value (1 to 5)",
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "comments": {
                                        "description": "Optional comments",
                                        "type": "string",
                                        "example": "Muy divertido"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rating processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Rating created successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid rating value"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error processing rating"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/profile/{userId}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get User Profile",
                "description": "Retrieve the profile information of a user by their ID.",
                "operationId": "getUserProfile",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User profile retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "Juan"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Romero"
                                                },
                                                "gender": {
                                                    "type": "string",
                                                    "example": "M"
                                                },
                                                "birthdate": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "1998-04-15"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "example": "Peru"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Lima"
                                                },
                                                "member_since": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-20 14:30:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving user profile: Internal server error"
                                        },
                                        "data": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/update/{userId}": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update User Profile",
                "description": "Update the profile information of a user by their ID.",
                "operationId": "updateUserProfile",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Juan"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Romero"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "Male",
                                            "Female",
                                            "Other"
                                        ],
                                        "example": "Male"
                                    },
                                    "birthdate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1998-04-15"
                                    },
                                    "city": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Lima"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User profile updated successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        },
                                        "data": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed."
                                        },
                                        "data": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field must be a string."
                                                    }
                                                },
                                                "gender": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected gender is invalid."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "data": {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/id-by-email": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Obtiene el ID de un usuario a partir de su correo electr√≥nico",
                "operationId": "1adccb4927632c64e8639a0ad44785af",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ID del usuario recuperado correctamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User ID retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Usuario no encontrado",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error retrieving user ID: Detalles del error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Countries",
            "description": "Countries"
        },
        {
            "name": "Games",
            "description": "Games"
        },
        {
            "name": "Programming Games",
            "description": "Programming Games"
        },
        {
            "name": "Ratings",
            "description": "Ratings"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}